# Core scientific computing
numpy>=1.24.0,<2.0.0
scipy>=1.10.0,<2.0.0
pandas>=2.0.0,<3.0.0

# Optimization and linear programming
cvxpy>=1.3.0,<2.0.0

# Data visualization
matplotlib>=3.7.0,<4.0.0
folium>=0.17.0,<1.0.0
seaborn>=0.12.0,<1.0.0

# Web scraping and data collection
requests>=2.28.0,<3.0.0

# System monitoring and utilities (optional)
psutil>=5.9.0,<8.0.0

# GUI and real-time map functionality
# =====================================
# This section includes dependencies for the enhanced GUI with integrated
# real-time map visualization. The map functionality provides:
# - Interactive map generation using Folium
# - Real-time map updates during simulation
# - Integrated map preview within the GUI
# - External browser integration for full interactivity
# - Dynamic map statistics and element tracking
#
# Note: The following modules are built-in with Python and don't require installation
# tkinter - GUI framework for the main application interface
# webbrowser - For opening maps in external browser
# subprocess - For system process management
# platform - For cross-platform compatibility
# threading - For real-time map updates
# tempfile - For temporary file handling

# Development dependencies (optional)
pytest==8.4.2
pytest-cov==6.3.0
black==25.1.0
flake8==7.3.0
mypy==1.17.1
coverage==7.10.6
isort==5.13.2
ruff==0.8.4

# =============================================================================
# INSTALLATION NOTES
# =============================================================================
# To install all dependencies for the Cybernetic Planning System, run:
#   pip install -r requirements.txt
#
# For virtual environment setup:
#   python -m venv .venv
#   .venv\Scripts\activate  # Windows
#   source .venv/bin/activate  # Linux/Mac
#   pip install -r requirements.txt
#
# The system includes core functionality for economic planning with optional
# map visualization features. All dependencies are minimal and essential only.
#
# Note: This requirements.txt has been optimized to include only packages
# actually used in the codebase, with compatible version ranges for Python 3.9+